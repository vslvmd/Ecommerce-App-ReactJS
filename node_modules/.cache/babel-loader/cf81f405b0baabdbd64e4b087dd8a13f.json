{"ast":null,"code":"var _jsxFileName = \"/Users/vasaamadea/Documents/mini_project_3/ecommerce-app/src/pages/auth/register.jsx\",\n    _s = $RefreshSig$();\n\nimport { React } from 'react';\nimport { Button, Container, FormFeedback, Input } from 'reactstrap';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { authRegister } from '../../service/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object().shape({\n  email: yup.string().email().required(),\n  username: yup.string().min(8).required(),\n  password: yup.string().min(8).required(),\n  retypePassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match')\n});\n\nconst Register = _ref => {\n  _s();\n\n  let {\n    setCurrentContainer\n  } = _ref;\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      username: '',\n      password: '',\n      retypePassword: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: () => handleRegister()\n  });\n\n  const handleRegister = async e => {\n    const {\n      code,\n      msg\n    } = await authRegister(formik.values);\n\n    if (code === 200) {\n      setCurrentContainer(false);\n      alert(msg);\n    } else {\n      alert(msg);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"container-register\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [Object.keys(formik.initialValues).map((key, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row-input\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: key === \"password\" || key === \"retypePassword\" ? \"password\" : \"text\",\n          id: key,\n          name: key,\n          placeholder: key,\n          value: formik.values[key],\n          onChange: formik.handleChange,\n          invalid: formik.touched[key] && Boolean(formik.errors[key])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), formik.touched[key] && Boolean(formik.errors[key]) && /*#__PURE__*/_jsxDEV(FormFeedback, {\n          className: \"error-feedback\",\n          children: formik.errors[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-submit\",\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/vasaamadea/Documents/mini_project_3/ecommerce-app/src/pages/auth/register.jsx"],"names":["React","Button","Container","FormFeedback","Input","useFormik","yup","authRegister","validationSchema","object","shape","email","string","required","username","min","password","retypePassword","oneOf","ref","Register","setCurrentContainer","formik","initialValues","onSubmit","handleRegister","e","code","msg","values","alert","handleSubmit","Object","keys","map","key","index","handleChange","touched","Boolean","errors"],"mappings":"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","sourcesContent":["import { React } from 'react'\nimport { Button, Container, FormFeedback, Input } from 'reactstrap'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup'\nimport { authRegister } from '../../service/auth'\n\nconst validationSchema = yup.object().shape({\n  email: yup.string().email().required(),\n  username: yup.string().min(8).required(),\n  password: yup.string().min(8).required(),\n  retypePassword: yup.string()\n  .oneOf([yup.ref('password'), null], 'Passwords must match'),\n});\n\nconst Register = ({setCurrentContainer}) => {\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      username: '',\n      password: '',\n      retypePassword: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: () => handleRegister()\n  });\n\n  const handleRegister = async (e) => {\n    const {code, msg} = await  authRegister(formik.values)\n    if(code === 200){\n      setCurrentContainer(false);\n      alert(msg)\n    }else{\n      alert(msg)   \n    }\n  }\n\n  return (\n    <Container className=\"container-register\">\n      <form onSubmit={formik.handleSubmit}>\n        {\n          Object.keys(formik.initialValues).map((key, index) => (\n            <div key={index} className=\"row-input\">\n              <Input\n                type={key === \"password\" || key === \"retypePassword\" ?  \"password\" : \"text\"}\n                id={key}\n                name={key}\n                placeholder={key}\n                value={formik.values[key]}\n                onChange={formik.handleChange}\n                invalid={formik.touched[key] && Boolean(formik.errors[key])}\n              />\n              {\n                formik.touched[key] && Boolean(formik.errors[key]) &&\n                <FormFeedback className=\"error-feedback\">{formik.errors[key]}</FormFeedback>\n              }\n            </div>\n          ))\n        }\n        <Button className=\"btn-submit\" type=\"submit\">\n          Register\n        </Button>\n      </form>\n    </Container >\n  )\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}