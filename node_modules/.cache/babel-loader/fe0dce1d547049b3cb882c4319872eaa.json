{"ast":null,"code":"var _jsxFileName = \"/Users/vasaamadea/Documents/mini_project_3/ecommerce-app/src/component/Modal.jsx\";\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ModalCRUD = _ref => {\n  let {\n    title,\n    isOpen,\n    setOpen,\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      toggle: () => setOpen(!isOpen),\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = ModalCRUD;\nexport default ModalCRUD;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalCRUD\");","map":{"version":3,"sources":["/Users/vasaamadea/Documents/mini_project_3/ecommerce-app/src/component/Modal.jsx"],"names":["Modal","ModalBody","ModalHeader","ModalCRUD","title","isOpen","setOpen","children"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,WAA3B,QAAgD,YAAhD;;;;AAEA,MAAMC,SAAS,GAAG,QAA0C;AAAA,MAAzC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA,OAAjB;AAA0BC,IAAAA;AAA1B,GAAyC;AAC1D,sBACE;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEF,MAAf;AAAuB,MAAA,MAAM,EAAE,MAAIC,OAAO,CAAC,CAACD,MAAF,CAA1C;AAAA,8BACE,QAAC,WAAD;AAAA,kBAAcD;AAAd;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAA,kBAAYG;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAQD,CATD;;KAAMJ,S;AAWN,eAAeA,SAAf","sourcesContent":["import { Modal, ModalBody, ModalHeader,  } from \"reactstrap\";\n\nconst ModalCRUD = ({ title ,isOpen, setOpen, children }) => {\n  return (\n    <>\n      <Modal isOpen={isOpen} toggle={()=>setOpen(!isOpen)}>\n        <ModalHeader>{title }</ModalHeader>\n        <ModalBody>{children}</ModalBody>\n      </Modal>\n    </>\n  )\n}\n\nexport default ModalCRUD;"]},"metadata":{},"sourceType":"module"}