{"ast":null,"code":"var _jsxFileName = \"/Users/vasaamadea/Documents/mini_project_3/ecommerce-app/src/pages/dashboard/form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Row, Col, Input, FormGroup, Label, Form } from 'reactstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst productApiURL = process.env.REACT_APP_PRODUCT_API_URL;\n\nconst FormInput = _ref => {\n  _s();\n\n  let {\n    action,\n    data,\n    setModalVisible,\n    updateId\n  } = _ref;\n  const initialFormValue = {\n    name: \"\",\n    quantity: 0,\n    price: 0\n  };\n  const [form, setForm] = useState(initialFormValue);\n\n  const createData = async () => {\n    await axios.post(productApiURL, form).then(() => {\n      data.push(form);\n      setModalVisible(false);\n    }).catch(err => alert(err));\n  };\n\n  const updatedData = async () => {\n    await axios.put(`${productApiURL}/${updateId}`, form).then(() => {\n      const index = data.findIndex(p => p.id === updateId);\n      data[index] = form;\n      setModalVisible(false);\n    }).catch(err => alert(err));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (action === \"create\") return createData();\n    return updatedData();\n  };\n\n  useEffect(() => {\n    if (action === \"edit\") {\n      const editData = data.find(v => v.id === updateId);\n      delete editData.id;\n      setForm(editData);\n    }\n  }, [data, action, updateId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n          children: Object.keys(form).map((key, idx) => /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: key === \"name\" ? \"text\" : \"number\",\n              value: form[key],\n              placeholder: key,\n              onChange: e => setForm(prev => ({ ...prev,\n                [key]: e.target.value\n              })),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this))\n        }, void 0, false), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              type: \"submit\",\n              children: \" Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setModalVisible(false),\n              children: \" Cancel \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(FormInput, \"ZXLN3W9TH7oTULiAf77pYGx/kz4=\");\n\n_c = FormInput;\nexport default FormInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormInput\");","map":{"version":3,"sources":["/Users/vasaamadea/Documents/mini_project_3/ecommerce-app/src/pages/dashboard/form.jsx"],"names":["React","useState","useEffect","Button","Row","Col","Input","FormGroup","Label","Form","axios","productApiURL","process","env","REACT_APP_PRODUCT_API_URL","FormInput","action","data","setModalVisible","updateId","initialFormValue","name","quantity","price","form","setForm","createData","post","then","push","catch","err","alert","updatedData","put","index","findIndex","p","id","handleSubmit","e","preventDefault","editData","find","v","Object","keys","map","key","idx","prev","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Button,\n  Row,\n  Col,\n  Input,\n  FormGroup,\n  Label,\n  Form\n} from 'reactstrap';\nimport axios from 'axios';\n\nconst productApiURL = process.env.REACT_APP_PRODUCT_API_URL;\n\nconst FormInput = ({ action, data, setModalVisible, updateId }) => {\n  \n  const initialFormValue = {\n    name: \"\",\n    quantity: 0,\n    price: 0,\n    \n  }\n\n  const [form, setForm] = useState(initialFormValue);\n  \n  const createData = async () => {\n    await axios.post(productApiURL, form)\n      .then(() => {\n        data.push(form);\n        setModalVisible(false);\n      })\n      .catch(err => alert(err))\n  };\n\n  const updatedData = async () => {\n    await axios.put(`${productApiURL}/${updateId}`, form)\n      .then(() => {\n        const index = data.findIndex((p) => p.id === updateId)\n        data[index] = form\n        setModalVisible(false);\n      })\n      .catch(err => alert(err))\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (action === \"create\") return createData()\n    return updatedData()\n  }\n\n  useEffect(() => {\n    if (action === \"edit\") {\n      const editData = data.find(v => v.id === updateId)\n      delete editData.id\n      setForm(editData)\n    }\n  }, [data, action, updateId])\n\n  return (\n    <>\n      <Row>\n        <Form onSubmit={handleSubmit}>\n          <>\n            {Object.keys(form).map((key, idx) => (\n              <FormGroup key={idx}>\n                <Label>{key}</Label>\n                <Input\n                  type={key === \"name\" ? \"text\" : \"number\"}\n                  value={form[key]}\n                  placeholder={key}\n                  onChange={(e) => setForm(prev => ({\n                    ...prev,\n                    [key]: e.target.value\n                  }))}\n                  required\n                />\n              </FormGroup>\n            ))}\n          </>\n          <Row>\n            <Col>\n              <Button color=\"primary\" type=\"submit\"> Submit</Button>\n            </Col>\n            <Col>\n              <Button onClick={() => setModalVisible(false)} > Cancel </Button>\n            </Col>\n          </Row>\n        </Form>\n      </Row>\n    </>\n  )\n}\n\nexport default FormInput"]},"metadata":{},"sourceType":"module"}