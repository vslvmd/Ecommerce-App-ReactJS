{"ast":null,"code":"var _jsxFileName = \"/Users/vasaamadea/Documents/mini_project_3/ecommerce-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Row, Col, Button, Input, Modal, ModalBody, Label } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const productList = [{\n    \"id\": \"1\",\n    \"name\": \"Vasa\",\n    \"quantity\": 1,\n    \"price\": 2000\n  }];\n  const [name, setName] = useState(\"\");\n  const [quantity, setQuantity] = useState(0);\n  const [price, setPrice] = useState(0);\n  const [modalAdd, setModalAdd] = useState(false);\n  const [modalDel, setModalDel] = useState(false);\n  const [idDel, setIdDel] = useState(null);\n\n  const handleModalAdd = () => {\n    setModalAdd(!modalAdd);\n  };\n\n  const handleAdd = () => {\n    let dataThatWillAdded = {\n      name,\n      quantity,\n      price,\n      id: Math.random().toString()\n    };\n    setData([...data, dataThatWillAdded]);\n    setName(\"\");\n    setQuantity(0);\n    setPrice(0);\n    setModalAdd(false);\n  };\n\n  const handleName = (e, idx) => {\n    let dataTmp = [...data];\n    dataTmp[idx].name = e.target.value;\n    setData([...dataTmp]);\n  };\n\n  const handleQuantity = (e, idx) => {\n    let dataTmp = [...data];\n    dataTmp[idx].quantity = parseInt(e.target.value);\n    setData([...dataTmp]);\n  };\n\n  const handlePrice = (e, idx) => {\n    let dataTmp = [...data];\n    dataTmp[idx].price = parseInt(e.target.value);\n    setData([...dataTmp]);\n  };\n\n  const handleDel = () => {\n    let dataTmp = data.filter(v => v.id !== idDel);\n    setData(dataTmp);\n    setModalDel(false);\n  }; //Inisialisasi Data\n\n\n  const [data, setData] = useState(productList);\n  useEffect(() => {}, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Label, {\n        children: \"Ecommerce\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"add\",\n      onClick: () => handleModalAdd(),\n      children: \"Add Data  \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this), data.map((v, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-items\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 1,\n          children: /*#__PURE__*/_jsxDEV(\"center\", {\n            children: idx + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 2,\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: \"   Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: \"   Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: \"   Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 7,\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [\"   \", /*#__PURE__*/_jsxDEV(Input, {\n              value: v.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [\"  \", /*#__PURE__*/_jsxDEV(Input, {\n              value: v.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 16\n            }, this), \"    \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [\"  \", /*#__PURE__*/_jsxDEV(Input, {\n              value: v.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 16\n            }, this), \"    \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn-delete\",\n            onClick: () => {\n              setModalDel(true);\n              setIdDel(v.id);\n            },\n            children: \"Del\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this)\n    }, v.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 3\n    }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalAdd,\n      children: /*#__PURE__*/_jsxDEV(ModalBody, {\n        className: \"modal-create\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 2,\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: \"   name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: \"   Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: \"   price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 7,\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Input, {\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Input, {\n                value: quantity,\n                onChange: e => setQuantity(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                value: price,\n                onChange: e => setPrice(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 14\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleAdd(),\n          children: \" Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalDel,\n      children: /*#__PURE__*/_jsxDEV(ModalBody, {\n        className: \"modal-delete\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"label-delete\",\n          children: \"  \\\"Delete\\\" data?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn-delete\",\n            onClick: () => handleDel(),\n            children: \" Del\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn-cancel\",\n            onClick: () => setModalDel(false),\n            children: \" Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"gbu9otcW9e6jXw0M7QMWmzZMhr8=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vasaamadea/Documents/mini_project_3/ecommerce-app/src/App.js"],"names":["React","useEffect","useState","Row","Col","Button","Input","Modal","ModalBody","Label","App","productList","name","setName","quantity","setQuantity","price","setPrice","modalAdd","setModalAdd","modalDel","setModalDel","idDel","setIdDel","handleModalAdd","handleAdd","dataThatWillAdded","id","Math","random","toString","setData","data","handleName","e","idx","dataTmp","target","value","handleQuantity","parseInt","handlePrice","handleDel","filter","v","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Row, Col, Button, Input, Modal, ModalBody, Label } from \"reactstrap\";\n\n\n\n\nexport default function App() {\n  const productList = [\n    {\n        \"id\": \"1\",\n        \"name\": \"Vasa\",\n        \"quantity\": 1,\n        \"price\": 2000\n    }\n]\n\nconst [name, setName] = useState(\"\");\nconst [quantity, setQuantity] = useState(0);\nconst [price, setPrice] = useState(0);\nconst [modalAdd, setModalAdd] = useState(false);\nconst [modalDel, setModalDel] = useState(false);\nconst [idDel, setIdDel] = useState(null);\n\nconst handleModalAdd = () => {\n  setModalAdd(!modalAdd)\n}\n\nconst handleAdd = () => {\n  let dataThatWillAdded = {name, quantity, price, id:Math.random().toString()}\n  setData([...data, dataThatWillAdded])\n  setName(\"\");\n  setQuantity(0);\n  setPrice(0);\n  setModalAdd(false);\n }\n  \nconst handleName = (e, idx) => {\nlet dataTmp = [...data]\ndataTmp[idx].name = e.target.value\nsetData([...dataTmp])\n}\n\nconst handleQuantity = (e, idx) => {\n  let dataTmp = [...data]\n  dataTmp[idx].quantity = parseInt(e.target.value)\n  setData([...dataTmp])\n  }\n\nconst handlePrice = (e, idx) => {\nlet dataTmp = [...data]\ndataTmp[idx].price = parseInt(e.target.value)\nsetData([...dataTmp])\n}\n\nconst handleDel = () => {\n  let dataTmp = data.filter((v) => v.id !== idDel)\n  setData(dataTmp)\n  setModalDel(false)\n  }\n\n\n//Inisialisasi Data\nconst [data, setData] = useState(productList);\n\nuseEffect(() => {\n\n}, [data]);\n\nreturn (\n  <div className=\"app\">\n          <Row><Label>Ecommerce</Label></Row>\n\n          <Button className=\"add\" onClick={() => handleModalAdd()}>\nAdd Data  </Button>\n\n{data.map((v, idx) => (\n\n  <div className=\"card-items\" key={v.id}>\n    <Row>\n      <Col md={1}>\n        <center>{idx + 1}</center>\n      </Col>\n      <Col md={2} >\n        <Row>   Name</Row>\n        <Row>   Quantity</Row>\n        <Row>   Price</Row>\n      </Col>\n      <Col md={7} >\n        <Row>   <Input value={v.name} />  </Row>\n        <Row>  <Input value={v.quantity} />    </Row>\n        <Row>  <Input value={v.price} />    </Row>\n      </Col>\n      <Col md={2}>\n        <Button className=\"btn-delete\" onClick={() => {\n          setModalDel(true)\n          setIdDel(v.id)\n          }}>\n          Del</Button>\n      </Col>\n\n      \n    </Row>\n  </div>\n))}\n<Modal isOpen={modalAdd}>\n  <ModalBody className=\"modal-create\">\n    <Row>\n      <Col md={2} >\n        <Row>   name</Row>\n        <Row>   Quantity</Row>\n        <Row>   price</Row>\n      </Col>\n      <Col md={7} >\n        <Row> <Input value={name} onChange={(e) => setName(e.target.value)} /></Row>\n        <Row> <Input value={quantity} onChange={(e) => setQuantity(e.target.value)} /></Row>\n        <Row><Input value={price} onChange={(e) => setPrice(e.target.value)} /></Row>\n      </Col>\n    </Row>\n    <Button onClick={() => handleAdd()}> Add</Button>\n    </ModalBody>\n  </Modal>\n\n  <Modal isOpen={modalDel}>\n    <ModalBody className=\"modal-delete\">\n      <Row className=\"label-delete\">  \"Delete\" data?</Row>\n      <Row>\n        <Button  className=\"btn-delete\" onClick={() => handleDel()}> Del</Button>\n        <Button  className=\"btn-cancel\" onClick={() => setModalDel(false)}> Cancel</Button>\n      </Row>\n    </ModalBody>\n  </Modal>\n\n</div>\n);\n}\n\n"]},"metadata":{},"sourceType":"module"}